<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.jiminger</groupId>
  <artifactId>organize</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>Organize</name>
  <description>Backup data</description>
  
  <properties>
    <dempsy-commons.version>2.4.2-SNAPSHOT</dempsy-commons.version>
    
    <!--<platform>linux-aarch64</platform>-->
    <!--<platform>linux-x86_64</platform>-->
    
    <pilecv4j.version>1.1.1-SNAPSHOT</pilecv4j.version>

  </properties>
  
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>net.dempsy</groupId>
        <artifactId>dempsy-commons-bom</artifactId>
        <version>${dempsy-commons.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>1.7.30</version>
      </dependency>
      <dependency>
        <groupId>org.lmdbjava</groupId>
        <artifactId>lmdbjava</artifactId>
        <version>0.9.0</version>
      </dependency>
      <!-- These are redundant and so optional but make the system more robust -->
      <dependency> 
        <groupId>com.twelvemonkeys.bom</groupId>
        <artifactId>bom</artifactId>
        <version>3.12.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- These are runtime dependencies that add the jpeg2000 codec to ImageIO -->
<!--      <dependency>
        <groupId>com.github.jai-imageio</groupId>
        <artifactId>jai-imageio-core</artifactId>
        <version>1.4.0</version>
      </dependency>
      <dependency>
        <groupId>com.github.jai-imageio</groupId>
        <artifactId>jai-imageio-jpeg2000</artifactId>
        <version>1.3.0</version>
      </dependency> -->
    </dependencies>
  </dependencyManagement>
  
  <dependencies>
    <dependency>
      <groupId>it.geosolutions.imageio-ext</groupId>
      <artifactId>imageio-ext-gdalkakadujp2</artifactId>
      <version>1.4.14</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-imaging</artifactId>
      <version>1.0-alpha2</version>
    </dependency>
    <dependency>
      <groupId>ai.kognition.pilecv4j</groupId>
      <artifactId>lib-image</artifactId>
      <version>${pilecv4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ai.kognition.pilecv4j</groupId>
      <artifactId>native-image-linux-aarch64</artifactId>
      <classifier>bin</classifier>
      <version>${pilecv4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ai.kognition.pilecv4j</groupId>
      <artifactId>native-image-linux-x86_64</artifactId>
      <classifier>bin</classifier>
      <version>${pilecv4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ai.kognition.pilecv4j</groupId>
      <artifactId>opencv-linux-aarch64</artifactId>
      <classifier>withlib</classifier>
      <version>1.0-opencv4.9.0</version>
    </dependency>
    <dependency>
      <groupId>net.sf.sevenzipjbinding</groupId>
      <artifactId>sevenzipjbinding</artifactId>
      <version>16.02-2.01</version>
    </dependency>
    <dependency>
      <groupId>net.sf.sevenzipjbinding</groupId>
      <artifactId>sevenzipjbinding-all-platforms</artifactId>
      <version>16.02-2.01</version>
    </dependency>
    <dependency>
      <groupId>net.sf.sevenzipjbinding</groupId>
      <artifactId>sevenzipjbinding-linux-arm64</artifactId>
      <version>16.02-2.01</version>
    </dependency>
    <dependency>
      <groupId>net.dempsy</groupId>
      <artifactId>dempsy-serialization.kryo</artifactId>
    </dependency>
    <dependency>
      <groupId>net.dempsy</groupId>
      <artifactId>dempsy-utils</artifactId>
    </dependency>
    <dependency>
      <groupId>net.dempsy</groupId>
      <artifactId>dempsy-vfs.api</artifactId>
    </dependency>
    <dependency>
      <groupId>net.dempsy</groupId>
      <artifactId>dempsy-serialization.jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-core</artifactId>
      <version>2.2.1</version>
    </dependency>
    <dependency> <!-- Required if using the tar utils.vfs or many compression file systems -->
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
        <version>1.21</version>
    </dependency>
    <dependency><!-- Required if using the xz utils.vfs file system -->
      <groupId>org.tukaani</groupId>
      <artifactId>xz</artifactId>
      <version>1.8</version>
    </dependency>
    <dependency>
      <groupId>com.drewnoakes</groupId>
      <artifactId>metadata-extractor</artifactId>
      <version>2.16.0</version>
    </dependency>
    <dependency>
      <groupId>org.lmdbjava</groupId>
      <artifactId>lmdbjava</artifactId>
    </dependency>

    <!-- Twelvemonkey's ImageIO plugins -->
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-bmp</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-hdr</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-icns</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-iff</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-jpeg</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-pcx</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-pdf</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-pict</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-pnm</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-psd</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-sgi</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-tga</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-thumbsdb</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-tiff</artifactId>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-webp</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-xwd</artifactId>
    </dependency>

<!--   <dependency>
      <groupId>com.github.jai-imageio</groupId>
      <artifactId>jai-imageio-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.jai-imageio</groupId>
      <artifactId>jai-imageio-jpeg2000</artifactId>
    </dependency> -->
   </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>17</source>
          <target>17</target>
          <debug>true</debug>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.4.0</version>
        <executions>
          <execution>
            <id>make-zip</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <!-- Use a custom descriptor for the ZIP structure -->
                <descriptor>src/assembly/zip-with-dependencies.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
<!--      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <shadedArtifactAttached>true</shadedArtifactAttached>
          <shadedClassifierName>bin</shadedClassifierName>
          <createDependencyReducedPom>false</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>reference.conf</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.handlers</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.schemas</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" /> -->
<!--                 <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${mainclass}</mainClass>
                </transformer> -->
<!--              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin> -->
    </plugins>
  </build>
</project>
